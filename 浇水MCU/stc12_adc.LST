C51 COMPILER V9.00   STC12_ADC                                                             12/15/2017 18:39:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE STC12_ADC
OBJECT MODULE PLACED IN stc12_adc.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE stc12_adc.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2           //     2017-02-06                      
   3          
   4          #include "reg52.h"
   5          #include  <INTRINS.H> //Keil library  
   6          #include "Delay_12M.h"
   7          #include "stc12_adc.h"
   8          
   9          
  10          /*Declare SFR associated with the ADC */
  11          sfr ADC_CONTR   =   0xBC;       //ADC control register 
  12          sfr ADC_RES     =   0xBD;       //ADC high 8-bit result register 
  13          sfr ADC_LOW2    =   0xBE;        //ADC low 2-bit result register 
  14          sfr P1ASF       =   0x9D;       //P1 secondary function control register
  15          
  16          /*Define ADC operation const for ADC_CONTR*/    
  17          #define ADC_POWER       0x80    //ADC power control bit
  18          #define ADC_FLAG        0x10    //ADC complete flag
  19          #define ADC_START       0x08    //ADC start control bit
  20          #define ADC_SPEEDLL 0x00        //540 clocks
  21          #define ADC_SPEEDL      0x20    //360 clocks
  22          #define ADC_SPEEDH      0x40    //180 clocks
  23          #define ADC_SPEEDHH 0x60        //90 clocks
  24          
  25          #define ADC_MY_SPEED    ADC_SPEEDLL
  26          
  27          
  28          
  29          
  30          
  31          /*----------------------------Initial ADC sfr----------------------------*/ 
  32          void InitADC(unsigned char ch_map) 
  33          {    
  34   1              P1ASF = ch_map;             
  35   1              ADC_RES = 0;
  36   1              ADC_LOW2= 0;
  37   1              ADC_CONTR = ADC_POWER | ADC_MY_SPEED;  
  38   1              DelayMs(2);                //ADC power-on and delay 
  39   1      }
  40          
  41          
  42          
  43          
  44          
  45          /*----------------------------Get ADC result----------------------------*/ 
  46          unsigned int GetADCResult(unsigned char ch)
  47          {
  48   1              unsigned int j;
  49   1      
  50   1              ADC_CONTR = ADC_POWER | ADC_MY_SPEED | ch | ADC_START;   
  51   1              
  52   1              //Must wait before inquiry   
  53   1              _nop_();        _nop_();  
  54   1              _nop_();        _nop_(); 
  55   1      
C51 COMPILER V9.00   STC12_ADC                                                             12/15/2017 18:39:34 PAGE 2   

  56   1              while (!(ADC_CONTR & ADC_FLAG));        //Wait complete flag  
  57   1      
  58   1              ADC_CONTR &= ~ADC_FLAG;  //Close ADC
  59   1      
  60   1              j = ADC_RES;
  61   1              j <<= 2;
  62   1              j |= ADC_LOW2;
  63   1      
  64   1              return j;        //Return ADC result    
  65   1      }
  66          
  67          
  68          
  69          
  70          #if 0
              /*----------------------------Get ADC result   1×Ö½Ú½á¹û----------------------------*/ 
              unsigned char GetADCResultU8(unsigned char ch)
              {
                      ADC_CONTR = ADC_POWER | ADC_MY_SPEED | ch | ADC_START;   
                      
                      //Must wait before inquiry   
                      _nop_();        _nop_();  
                      _nop_();        _nop_(); 
              
                      while (!(ADC_CONTR & ADC_FLAG));        //Wait complete flag  
              
                      ADC_CONTR &= ~ADC_FLAG;  //Close ADC
              
                      return ADC_RES;
              }
              #endif
  87          
  88          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     54    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
